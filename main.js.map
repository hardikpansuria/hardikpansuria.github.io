{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer-create/customer-create.component.css","webpack:///./src/app/customer-create/customer-create.component.html","webpack:///./src/app/customer-create/customer-create.component.ts","webpack:///./src/app/customer-list/customer-list.component.css","webpack:///./src/app/customer-list/customer-list.component.html","webpack:///./src/app/customer-list/customer-list.component.ts","webpack:///./src/app/error.component.html","webpack:///./src/app/error.component.ts","webpack:///./src/app/forgotpassword.component.html","webpack:///./src/app/forgotpassword.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<mat-toolbar  color=\\\"primary\\\"  class=\\\"fixed-header\\\">\\n  <mat-toolbar-row>\\n  <span><img  src=\\\"./assets/app_icon.png\\\"  style=\\\"width:50px;\\\"></span>\\n  \\n  <a  mat-button  routerLink=\\\"/customer-list\\\"  routerLinkActive=\\\"active\\\">Customers</a>\\n  <a  mat-button  routerLink=\\\"/customer-create\\\">Create Customer</a>\\n  \\n  <a  mat-button  routerLink=\\\"/login\\\">Login</a>\\n  </mat-toolbar-row>\\n  </mat-toolbar>\\n  \\n  <main>\\n  <router-outlet  style=\\\"margin-top: 80px;\\\"></router-outlet>\\n  </main>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'LoginDesign';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from  '@angular/router';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerCreateComponent } from './customer-create/customer-create.component';\nimport { MyMaterialModule } from  './material.module';\nimport {ErrorComponent} from './error.component';\nimport {PasswordComponent} from './forgotpassword.component';\nimport { FormsModule } from '@angular/forms';\nimport { NotfoundComponent } from './notfound/notfound.component';\n\n\nconst  appRoutes:  Routes  = [\n  { path:  'customer-list', component:  CustomerListComponent },\n  { path:  'customer-create', component:  CustomerCreateComponent },\n  {\n  path:  'login',\n  component:  LoginComponent\n  },\n  { path:  '',\n  \n  redirectTo:  '/login',\n  \n  pathMatch:  'full'\n  \n  },\n  {\n    path:  '**',\n    component:  NotfoundComponent\n    }\n  ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    CustomerListComponent,\n    CustomerCreateComponent,\n    ErrorComponent,\n    PasswordComponent,\n    NotfoundComponent,\n    ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    MyMaterialModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent,PasswordComponent],\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyLWNyZWF0ZS9jdXN0b21lci1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  customer-create works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-create',\n  templateUrl: './customer-create.component.html',\n  styleUrls: ['./customer-create.component.css']\n})\nexport class CustomerCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyLWxpc3QvY3VzdG9tZXItbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  Welcome to Blank Application!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h2  mat-dialog-title>Error</h2>\\r\\n<mat-dialog-content  class=\\\"error\\\">{{data.message}}</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n<button  mat-raised-button (click)=\\\"closeDialog()\\\">Ok</button>\\r\\n</mat-dialog-actions>\"","import {Component, Inject, Injectable} from  '@angular/core';\r\n\r\nimport {MatDialogRef, MAT_DIALOG_DATA, MatDialog} from  '@angular/material';\r\n\r\n@Component({\r\ntemplateUrl:  'error.component.html'\r\n})\r\nexport  class  ErrorComponent {\r\n    constructor(private  dialogRef:  MatDialogRef<ErrorComponent>, @Inject(MAT_DIALOG_DATA) public  data:  any) {\r\n    }\r\n    public  closeDialog() {\r\n        this.dialogRef.close();\r\n    }\r\n}","module.exports = \"<h2  mat-dialog-title>Forgot Password</h2>\\r\\n<mat-dialog-content  class=\\\"error\\\">{{data.message}}</mat-dialog-content>\\r\\n<br>\\r\\n<form class=\\\"password-form\\\">\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Email ID\\\"  name=\\\"emailID\\\" required>\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n<mat-dialog-actions>\\r\\n<button  mat-raised-button (click)=\\\"closeDialog()\\\">Ok</button>\\r\\n</mat-dialog-actions>\"","import {Component, Inject, Injectable} from  '@angular/core';\r\n\r\nimport {MatDialogRef, MAT_DIALOG_DATA, MatDialog} from  '@angular/material';\r\n\r\n@Component({\r\ntemplateUrl:  'forgotpassword.component.html'\r\n})\r\nexport  class  PasswordComponent {\r\n    constructor(private  dialogRef:  MatDialogRef<PasswordComponent>, @Inject(MAT_DIALOG_DATA) public  data:  any) {\r\n    }\r\n    public  closeDialog() {\r\n        this.dialogRef.close();\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"login-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Login</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"login-form\\\">\\n\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Email ID\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\n      </mat-form-field>\\n\\n      <br>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n      </mat-form-field>\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n  </mat-card-actions>\\n\\n  <mat-card-actions>\\n    <button mat-flat-button (click)=\\\"forgotPassword()\\\" color=\\\"red\\\">Forgot password?</button>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { ErrorComponent } from '../error.component';\nimport { PasswordComponent } from '../forgotpassword.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public username: string = \"\";\n  public password: string =\"\";\n\n  re  = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  \n  passw=  /^[A-Za-z]\\w{8,15}$/;\n\n  passRegEx= /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  //public errorDialogRef: MatDialogRef<ErrorComponent>;\n\n  constructor(private dialog: MatDialog,private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login(){\n    if(this.username === \"pmc\" && this.password === \"pmc123\")\n    {\n      this.dialog.open(ErrorComponent,{  data: {\n        message: \"Thanks for login to a blank app!\"\n      }});\n      this.router.navigate(['customer-list']);\n\n    } else if(this.username===\"\" || this.password ===\"\")\n    {\n      \n      this.dialog.open(ErrorComponent,{  data: {\n        message: \"Email ID or Password is blank!\"\n      }});\n    }else if(!this.re.test(this.username)){\n      this.dialog.open(ErrorComponent,{  data: {\n        message: \"Invalid Email ID !\"\n      }});\n\n    }else if(this.username.includes(\"mailinator.com\")){\n      this.dialog.open(ErrorComponent,{  data: {\n        message: \"Invalid Email ID as its from mailinator.com !\"\n      }});\n\n    }else if(!this.passRegEx.test(this.password)){\n      this.dialog.open(ErrorComponent,{  data: {\n        message: \"Invalid Password- check password policy!\"\n      }});\n\n    }else\n    {\n        this.dialog.open(ErrorComponent,{  data: {\n        message: \"Your login information are incorrect!\"\n      }});\n    }\n  }\n\n\n\n  ValidateEmail(inputText)\n{\nvar mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\nif(inputText.value.match(mailformat))\n{\nreturn true;\n}\nelse\n{\nreturn false;\n}\n}\n\n\n  forgotPassword(){\n/*\n    this.dialog.open(ErrorComponent,{  data: {\n      message: \"Welcome to blank app!\"\n    }});\n*/\n\nthis.dialog.open(PasswordComponent,{  data: {\n  message: \"Reset your password!\"\n}});\n  }\n}\n","import { NgModule } from  '@angular/core';\r\nimport {MatNativeDateModule,MatSnackBarModule,MatIconModule,MatDialogModule,\r\n     MatButtonModule, MatTableModule, MatPaginatorModule , MatSortModule,MatTabsModule,\r\n      MatCheckboxModule, MatToolbarModule, MatCard, MatCardModule, MatFormField, MatFormFieldModule, \r\n      MatProgressSpinnerModule, MatInputModule } from  '@angular/material';\r\nimport {MatDatepickerModule} from  '@angular/material/datepicker';\r\nimport {MatRadioModule} from  '@angular/material/radio';\r\nimport {MatSelectModule} from  '@angular/material/select';\r\nimport {MatSliderModule} from  '@angular/material/slider';\r\nimport {MatDividerModule} from  '@angular/material/divider';\r\n\r\n@NgModule({\r\nimports: [MatTabsModule,MatDividerModule,MatSliderModule,MatSelectModule,MatRadioModule,\r\n    MatNativeDateModule,MatDatepickerModule,MatSnackBarModule,MatIconModule,MatDialogModule,\r\n    MatProgressSpinnerModule,MatButtonModule,MatSortModule,MatTableModule,MatTabsModule, \r\n    MatCheckboxModule, MatToolbarModule, MatCardModule, MatFormFieldModule, MatProgressSpinnerModule,\r\n     MatInputModule, MatPaginatorModule],\r\nexports: [MatTabsModule,MatDividerModule,MatSliderModule,MatSelectModule,MatRadioModule,\r\n    MatNativeDateModule,MatDatepickerModule,MatSnackBarModule,MatIconModule,MatDialogModule,\r\n    MatProgressSpinnerModule,MatButtonModule,MatSortModule, MatCheckboxModule, MatToolbarModule, \r\n    MatCardModule,MatTableModule,MatTabsModule, MatFormFieldModule, MatProgressSpinnerModule,\r\n     MatInputModule, MatPaginatorModule],\r\n\r\n})\r\n\r\nexport  class  MyMaterialModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGZvdW5kL25vdGZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2>\\n  Requested page not found !\\n</h2>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}